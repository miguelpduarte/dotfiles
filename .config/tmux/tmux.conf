# unbind the prefix and bind it to Ctrl-Space
# (C-a like screen collides with more stuff)
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# set scroll history to 100,000 lines
set-option -g history-limit 100000

# Make status messages show for longer
set -g display-time 4000

# Fix colors
set -g default-terminal "tmux-256color"
# https://stackoverflow.com/questions/41783367/tmux-tmux-true-color-is-not-working-properly/41786092#41786092
set -sa terminal-overrides ",xterm*:Tc"

## Status bar customizations:
### Copied from https://github.com/folke/tokyonight.nvim/tree/main/extras/tmux/tokyonight_night.tmux
### With a lot of tweaks to make it more minimal
set -g mode-style "fg=#7aa2f7,bg=#3b4261"

set -g message-style "fg=#7aa2f7,bg=#3b4261"
set -g message-command-style "fg=#7aa2f7,bg=#3b4261"

# Let the basic border stay white for now I think
# set -g pane-border-style "fg=#3b4261"
# Don't want to lose mode-based functionality
set -g pane-active-border-style "#{?pane_in_mode,fg=yellow,#{?synchronize-panes,fg=red,fg=#7aa2f7}}"
# set -g pane-active-border-style "fg=#7aa2f7"

set -g status "on"
set -g status-justify "left"

set -g status-style "fg=#7aa2f7,bg=#16161e"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left-style "fg=#15161e,bg=#7aa2f7,bold"
set -g status-right-style NONE

set -g status-left " #S "
# TODO: prefix_highlight seems to be doing nothing.
# Attempt at a simpler one, and defaulting to 24h
set -g status-right "#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d | %H:%M #[fg=#15161e,bg=#7aa2f7,bold] #h "
# set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %I:%M %p #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#7aa2f7,bold] #h "
# if-shell '[ "$(tmux show-option -gqv "clock-mode-style")" == "24" ]' {
#   set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %H:%M #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#7aa2f7,bold] #h "
# }

setw -g window-status-activity-style "underscore,fg=#a9b1d6,bg=#16161e"
# Because of the way the bold bg styling works, it's best to use the formatting for the separators
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#a9b1d6,bg=#16161e"
# My simpler version based on the default tmux configs:
setw -g window-status-current-style "bold,fg=#7aa2f7,bg=#3b4261"
setw -g window-status-format " #I:#W#{?window_flags,#{window_flags}, } "
# Even though these two are the same we need to set it to override the default which has no separating spaces.
setw -g window-status-current-format " #I:#W#{?window_flags,#{window_flags}, } "
# setw -g window-status-last-style default # TODO: maybe make this like a lighter gray bg to further separate it from the others?

# setw -g window-status-format "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]"
# setw -g window-status-current-format "#[fg=#16161e,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261,bold] #I  #W #F #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]"
### End status bar customizations

# TODO: Really the only thing that feels missing after these general tweaks is
# a better way to manage sessions, like prime's tmux sessionizer.
# Basically fuzzy find some directory somewhere and create a session there.
# Could even do my typical edit,cmd,git spawning there, but not essential even
# for a first version.

# Start at 1 rather than 0 for windows and panes
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
# TODO: test it out, but it's prob fine as I was doing it manually anyway lol
set-option -g renumber-windows on

# Reload conf without restart
# TODO: Send message but only on success so we don't hide errors
bind r source-file ~/.config/tmux/tmux.conf

# Session management utils
bind C-s run-shell "~/dotfiles/.config/tmux/make_session.sh"
# In case I want to try out a nicer session picker,
# I'm happy with the default but maybe this one is cool too?
bind S run-shell "~/dotfiles/.config/tmux/hop2sesh.sh"

# This is misleading, "emacs" actually is just the bash-style readline that I'm used to
# Such as: <C-a> <C-e> to start/end of line, <C-u> to clear, etc.
# This applies to tmux command prompt as well as normal command prompt
set -g status-keys emacs
# But for copy mode we still want vi keybinds
set -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
# trial: Also for copy mode, improve with "y" bind like in vim visual mode
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Mouse friendly
set -g mouse on
# learn: Focus events enabled for terminals that support them
set -g focus-events on
# Useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Move between panes with vi keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Move to last active window, kind of like the ctrl-tab in wezterm or leader+leader in nvim
# Not sure which is the best bind, tried a few and landed in this one
bind Tab last-window
# Funnily enough, now that I disabled C-Tab for wezterm,
# I noticed that C-Tab without leader is bound to this by default,
# which is already a lot more ergonomic
# ^ Actually this is incorrect.
# I probably just had that config lying around due to some previous tests,
# and since I hadn't reloaded tmux, the "temporary" binding wasn't removed
# Thus, we re-add it here:
bind -n C-Tab last-window
# switch back and forth between *sessions*
bind C-Tab switch-client -l

# Splitting in cwd
# TODO: Might want the same for new windows tbh
# Tests show that the default is to spawn with cwd = session cwd
bind '"' split-window -v -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
