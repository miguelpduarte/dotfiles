# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
	name = Miguel Duarte
	# Managed with "scoped" included files now. See the `includeIf`
	# directives below
	email = <email>
[pull]
	ff = only
[diff]
	algorithm = histogram
[alias]
	s = status
	st = status
	b = branch
	last = log -1 HEAD
	l = log --oneline --decorate
	# TODO: Maybe also have a graph view that's shorter like in `g l` (can always add more args though)
	lga = log --graph --all
	sl = stash list
	ira = rebase -i --autosquash
	# No need for `graphite`! Ref: https://dev.to/onepoint/git-update-refs-in-a-nutshell-574c
	# Afterwards, can quickly update branches on remote with just `g fp origin branch-1 branch-2`
	irau = ira --update-refs
	fp = push --force-with-lease
	# TODO: Use the default remote, or actually all?
	tidy = remote prune origin
	# TODO: Abstract to use the default origin? Might want to not be origin
	# but instead the default, not sure if git even has that as a concept
	# new-remote-branch
	nrb = "!f() { git push -u origin $(git branch --show-current); }; f"
[init]
	defaultBranch = main
[rerere]
	# REuse REcorded REsolution: https://youtu.be/aolI_Rz0ZqY?t=947
	enabled = true
[branch]
	# Sort branches by reverse commit date (so latest first)
	sort = -committerdate
[includeIf "gitdir:~/coding/"]
	path = ~/coding/.gitconfig
[includeIf "gitdir:~/my-coding/"]
	path = ~/my-coding/.gitconfig
